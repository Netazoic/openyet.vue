{"version":3,"sources":["webpack:///./src/views/SlopeCalc.vue?f0df","webpack:///./src/lib/mathLib.js","webpack:///./src/views/SlopeCalc.vue?63b5","webpack:///src/views/SlopeCalc.vue","webpack:///./src/views/SlopeCalc.vue?fdcd","webpack:///./src/views/SlopeCalc.vue"],"names":["findLineByLeastSquares","xVals","yVals","sum_x","sum_y","sum_xy","sum_xx","count","x","y","values_length","length","Error","v","m","b","result_values_x","result_values_y","push","getSlope","Number","mX","mY","niceNumber","toString","replace","getCorrelation","ctY","Math","Array","Object","keys","forEach","val","idx","i","slope","intercept","correlation","inter","slo","cor","xmin","xmax","xs","ys","x2s","y2s","xys","min","max","sqrt","round","ret","yValsCalc","xMax","xMin","yMax","yMin","yAvg","average","mult","arr","reduce","sume","el","getSignificance","r","n","t","critT","t95","significance","render","_vm","this","_h","$createElement","_c","_self","_v","staticClass","directives","name","rawName","value","expression","attrs","domProps","on","$event","target","composing","y_values_input","calcSlope","calcLogSlope","calcSlopePerc","_s","lnSlope","slopePerc","slopeCheck","staticRenderFns","data","methods","yValsInput","yValsConv","M","r2","yValsLog","log","perc2","component"],"mappings":"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","file":"js/chunk-66e7b4f7.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SlopeCalc.vue?vue&type=style&index=0&id=5b36f4a8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SlopeCalc.vue?vue&type=style&index=0&id=5b36f4a8&scoped=true&lang=css&\"","Math.slope = function (xVals, yVals) {\r\n    if (!xVals) {\r\n        const mult = 1;\r\n        xVals = [];\r\n        Object.keys(yVals).forEach(idx => xVals.push((idx - 0 + 1) * mult));\r\n    }\r\n    return getSlope(xVals, yVals);\r\n}\r\n\r\nexport function findLineByLeastSquares(xVals, yVals) {\r\n    var sum_x = 0;\r\n    var sum_y = 0;\r\n    var sum_xy = 0;\r\n    var sum_xx = 0;\r\n    var count = 0;\r\n\r\n    /*\r\n     * We'll use those variables for faster read/write access.\r\n     */\r\n    var x = 0;\r\n    var y = 0;\r\n    var values_length = xVals.length;\r\n\r\n    if (values_length != yVals.length) {\r\n        throw new Error('The parameters xVals and yVals need to have same size!');\r\n    }\r\n\r\n    /*\r\n     * Nothing to do.\r\n     */\r\n    if (values_length === 0) {\r\n        return [[], []];\r\n    }\r\n\r\n    /*\r\n     * Calculate the sum for each of the parts necessary.\r\n     */\r\n    for (var v = 0; v < values_length; v++) {\r\n        x = xVals[v];\r\n        y = yVals[v];\r\n        sum_x += x - 0;\r\n        sum_y += y - 0;\r\n        sum_xx += x * x;\r\n        sum_xy += x * y;\r\n        count++;\r\n    }\r\n\r\n    /*\r\n     * Calculate m and b for the formular:\r\n     * y = x * m + b\r\n     */\r\n    var m = (count * sum_xy - sum_x * sum_y) / (count * sum_xx - sum_x * sum_x);\r\n    var b = (sum_y / count) - (m * sum_x) / count;\r\n\r\n    /*\r\n     * We will make the x and y result line now\r\n     */\r\n    var result_values_x = [];\r\n    var result_values_y = [];\r\n\r\n    for (var v = 0; v < values_length; v++) {\r\n        x = xVals[v];\r\n        y = x * m + b;\r\n        result_values_x.push(x);\r\n        result_values_y.push(y);\r\n    }\r\n\r\n    return [result_values_x, result_values_y];\r\n}\r\n\r\nexport function getSlope(xVals, yVals) {\r\n    var sum_x = new Number(0);\r\n    var sum_y = new Number(0);\r\n    var sum_xy = 0;\r\n    var sum_xx = 0;\r\n    var count = 0;\r\n    let mX = 0;   // Mean of x\r\n    let mY = 0;  //Mean of y\r\n\r\n    /*\r\n     * We'll use those variables for faster read/write access.\r\n     */\r\n    var x = 0;\r\n    var y = 0;\r\n    var values_length = xVals.length;\r\n\r\n    if (values_length != yVals.length) {\r\n        throw new Error('The parameters xVals and yVals need to have same size!');\r\n    }\r\n\r\n    /*\r\n     * Nothing to do.\r\n     */\r\n    if (values_length === 0) {\r\n        return [[], []];\r\n    }\r\n\r\n    // Calc the means\r\n\r\n\r\n    /*\r\n     * Calculate the sum for each of the parts necessary.\r\n     */\r\n    for (var v = 0; v < values_length; v++) {\r\n        x = xVals[v];\r\n        y = yVals[v];\r\n        sum_x += x - 0;\r\n        sum_y += y - 0;\r\n        count++;\r\n    }\r\n    mX = sum_x / values_length;\r\n    mY = sum_y / values_length;\r\n    for (var v = 0; v < values_length; v++) {\r\n        x = xVals[v];\r\n        y = yVals[v];\r\n        sum_xx += (x - mX) * (x - mX);\r\n        sum_xy += (x - mX) * (y - mY);\r\n    }\r\n\r\n    /*\r\n     * Calculate m and b for the formular:\r\n     * y = x * m + b\r\n     */\r\n    var m = sum_xy / sum_xx;\r\n    // var m = (count*sum_xy - sum_x*sum_y) / (count*sum_xx - sum_x*sum_x);\r\n    var b = (sum_y / count) - (m * sum_x) / count;\r\n\r\n    return m;\r\n\r\n}\r\n\r\nexport function niceNumber(x) {\r\n    if (x == null) return null;\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function getCorrelation(xVals,yVals) {\r\n    // from http://clymer.altervista.org/graphs/linear.html\r\n    const m = Math;\r\n    var x = new Array(),\r\n        y = new Array();\r\n    var xfield, yfield, ctY;\r\n    y = yVals;\r\n    if (!xVals) {\r\n       // x vals are just integers 1..n\r\n        Object.keys(y).forEach((val, idx) => {\r\n            x[idx] = idx + 1;\r\n        });\r\n    }else x = xVals;\r\n    //Make sure we are working with numbers\r\n    for (var i = 0; i < y.length; i++) {\r\n        y[i] = y[i] - 0;\r\n    }\r\n\r\n    ctY = y.length;\r\n    var xmin = x[1],\r\n        xmax = x[1];\r\n    var ymin = y[1],\r\n        ymax = y[1];\r\n    var xs = 0,\r\n        ys = 0,\r\n        x2s = 0,\r\n        y2s = 0,\r\n        xys = 0;\r\n    xmin = m.min(...x);\r\n    xmax = m.max(...x);\r\n    ymin = m.min(...y);\r\n    ymax = m.max(...y);\r\n    for (let i = 0; i < ctY; i++) {\r\n        // xmin = m.min(x[i], xmin);\r\n        // xmax = m.max(x[i], xmax);\r\n        // ymin = m.min(y[i], ymin);\r\n        // ymax = m.max(y[i], ymax);\r\n        xs += x[i];\r\n        ys += y[i];\r\n        x2s += x[i] * x[i];\r\n        y2s += y[i] * y[i];\r\n        xys += x[i] * y[i];\r\n    }\r\n\r\n    var slope, intercept, correlation;\r\n\r\n    intercept = (ys * x2s - xys * xs) / (ctY * x2s - xs * xs);\r\n    slope = (ctY * xys - xs * ys) / (ctY * x2s - xs * xs);\r\n    correlation =\r\n        (ctY * xys - xs * ys) /\r\n        m.sqrt((ctY * x2s - xs * xs) * (ctY * y2s - ys * ys));\r\n    correlation = correlation * correlation;\r\n\r\n    let inter, slo, cor; //rounded versions\r\n    inter = m.round(10000 * intercept) / 10000;\r\n    slo = m.round(10000 * slope) / 10000;\r\n    cor = m.round(10000 * correlation) / 10000;\r\n    let ret = {};\r\n    let yValsCalc = [];\r\n    for (var v = 0; v < ctY; v++) {\r\n        let x = xVals[v];\r\n        let y = slo*x  + intercept;\r\n        yValsCalc.push(y);\r\n    }\r\n    ret.correlation = cor;\r\n    ret.intercept = inter;\r\n    ret.slope = slo;\r\n    ret.xMax = xmax;\r\n    ret.xMin = xmin;\r\n    ret.yMax = Math.max(...yValsCalc);\r\n    ret.yMin = Math.min(...yValsCalc);\r\n    ret.yAvg = average(yValsCalc);\r\n    ret.ctY = ctY;\r\n    ret.yValsCalc = yValsCalc;\r\n    return ret;\r\n}\r\n\r\nconst average = arr => arr.reduce((sume, el) => sume + el, 0) / arr.length;\r\n\r\nexport function getSignificance(correlation, ctY) {\r\n    const m = Math;\r\n    const r = m.sqrt(correlation);\r\n    const n = ctY;\r\n    let t = r * m.sqrt((n - 2) / (1 - r * r));\r\n    //compare to critical t value\r\n    const critT = t95[n - 2];\r\n    let significance = t;\r\n    return { significance: significance, critT: critT }\r\n}\r\n\r\n\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"Slope Calculator\")]),_c('div',{staticClass:\"container\"},[_c('div',[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.y_values_input),expression:\"y_values_input\"}],staticClass:\"slope-data\",attrs:{\"placeholder\":\"Input y values, one per line or CSV\"},domProps:{\"value\":(_vm.y_values_input)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.y_values_input=$event.target.value}}})]),_c('div',[_c('button',{on:{\"click\":_vm.calcSlope}},[_vm._v(\"Calc Slope\")]),_c('button',{on:{\"click\":_vm.calcLogSlope}},[_vm._v(\"Calc Log Slope\")]),_c('button',{on:{\"click\":_vm.calcSlopePerc}},[_vm._v(\"Calc Slope %\")]),_c('div',[_c('label',[_vm._v(\"Slope:\")]),_vm._v(\" \"+_vm._s(_vm.slope)+\" \")]),_c('div',[_c('label',[_vm._v(\"Ln Slope:\")]),_vm._v(\" \"+_vm._s(_vm.lnSlope)+\" \")]),_c('div',[_c('label',[_vm._v(\"Slope %:\")]),_vm._v(\" \"+_vm._s(_vm.slopePerc)+\" \")]),_c('div',[_c('label',[_vm._v(\"Slope Check:\")]),_vm._v(\" \"+_vm._s(_vm.slopeCheck)+\" \")]),_c('div',[_c('label',[_vm._v(\"Intercept:\")]),_vm._v(\" \"+_vm._s(_vm.intercept)+\" \")]),_c('div',[_c('label',[_vm._v(\"Correlation (r^2):\")]),_vm._v(\" \"+_vm._s(_vm.correlation)+\" \")]),_c('div',[_c('label',[_vm._v(\"x-vals:\")]),_vm._v(\" \"+_vm._s(_vm.xVals)+\" \")]),_c('div',[_c('label',[_vm._v(\"y-vals:\")]),_vm._v(\" \"+_vm._s(_vm.yVals)+\" \")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <h1>Slope Calculator</h1>\r\n    <div class=\"container\">\r\n      <div>\r\n        <textarea\r\n          class=\"slope-data\"\r\n          v-model=\"y_values_input\"\r\n          placeholder=\"Input y values, one per line or CSV\"\r\n        ></textarea>\r\n      </div>\r\n      <div>\r\n        <button @click=\"calcSlope\">Calc Slope</button>\r\n        <button @click=\"calcLogSlope\">Calc Log Slope</button>\r\n        <button @click=\"calcSlopePerc\">Calc Slope %</button>\r\n        <div>\r\n          <label>Slope:</label>\r\n          {{slope}}\r\n        </div>\r\n        <div>\r\n          <label>Ln Slope:</label>\r\n          {{lnSlope}}\r\n        </div>\r\n        <div>\r\n          <label>Slope %:</label>\r\n          {{slopePerc}}\r\n        </div>\r\n        <div>\r\n          <label>Slope Check:</label>\r\n          {{slopeCheck}}\r\n        </div>\r\n        <div>\r\n          <label>Intercept:</label>\r\n          {{intercept}}\r\n        </div>\r\n        <div>\r\n          <label>Correlation (r^2):</label>\r\n          {{correlation}}\r\n        </div>\r\n        <div>\r\n          <label>x-vals:</label>\r\n          {{xVals}}\r\n        </div>\r\n        <div>\r\n          <label>y-vals:</label>\r\n          {{yVals}}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport * as mathLib from \"../lib/mathLib\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      xVals: [],\r\n      yVals: [],\r\n      y_values_input: \"\",\r\n      slope: \"Enter y values\",\r\n      slopeCheck: 0,\r\n      intercept: 0,\r\n      correlation: 0,\r\n      significance: 0,\r\n      lnSlope: 0,\r\n      slopePerc: 0\r\n    };\r\n  },\r\n  methods: {\r\n    calcSlope() {\r\n      const M = Math;\r\n      let yValsInput = this.y_values_input.trim();\r\n      //Strip quotes\r\n      yValsInput = yValsInput.replace(/['\"]/g, \"\");\r\n      let yVals = yValsInput.split(\"\\n\");\r\n\r\n      let slope = Math.slope(null, yVals);\r\n      let xVals = [];\r\n      Object.keys(yVals).forEach(idx => xVals.push(idx - 0 + 1));\r\n\r\n      let rVals = mathLib.getCorrelation(xVals,yVals);\r\n            /*\r\n          ret.correlation = cor;\r\n          ret.intercept = inter;\r\n          ret.slope = slo;\r\n          ret.xMax = xmax;\r\n          ret.xMin = xmin;\r\n          ret.yMax = ymax;\r\n          ret.yMin = ymin;\r\n          ret.ctY = ctY;\r\n      */\r\n      let r2 = rVals.correlation;\r\n      let m = rVals.slope;\r\n      let b = rVals.intercept;\r\n      let yValsConv = [];\r\n      for (var i = 0; i < yVals.length; i++) {\r\n        let x = xVals[i];\r\n        let y = x * m + b;\r\n        yValsConv.push(y);\r\n      }\r\n      // [xVals, yValsConv] = mathLib.findLineByLeastSquares(xVals, yVals);\r\n\r\n      this.xVals = xVals;\r\n      this.yVals = yValsConv;\r\n      this.slope = M.round(slope*1000)/1000;\r\n      this.slopeCheck = M.round(m*1000)/1000;\r\n      this.intercept = M.round(b*1000)/1000;\r\n      this.correlation = M.round(r2*1000)/1000;\r\n    },\r\n    calcLogSlope() {\r\n      let yValsInput = this.y_values_input.trim();\r\n      //Strip quotes\r\n      yValsInput = yValsInput.replace(/['\"]/g, \"\");\r\n      let yVals = yValsInput.split(\"\\n\");\r\n      for (let i = 0; i < yVals.length; i++) yVals[i] = new Number(yVals[i]);\r\n      let yValsLog = [];\r\n      //Convert to log values\r\n      // Find the min value and raise all y values by enough to make min 1\r\n      const min = Math.min(...yVals);\r\n      if (min < 1) yVals.forEach((val, idx) => (yVals[idx] = val + (1 - min)));\r\n      Object.keys(yVals).forEach(idx => {\r\n        yValsLog[idx] = Math.log(yVals[idx]);\r\n      });\r\n      let lnSlope = Math.slope(null,yValsLog);\r\n      let xVals = [];\r\n      Object.keys(yVals).forEach(idx => xVals.push(idx - 0));\r\n      let yValsConv = [];\r\n      [xVals, yValsConv] = mathLib.findLineByLeastSquares(xVals, yValsLog);\r\n      \r\n      this.lnSlope = Math.round(lnSlope*1000)/1000;\r\n      this.xVals = xVals;\r\n      this.yVals = yValsConv;\r\n    },\r\n    calcSlopePerc() {\r\n      this.calcSlope();\r\n      let perc1 = (this.yVals[1] - this.yVals[0]) / this.yVals[0];\r\n      const ct = this.yVals.length;\r\n      const first = this.yVals[0];\r\n      const last = this.yVals[ct - 1];\r\n      let perc2 = (last - first) / first / ct;\r\n      this.slopePerc = Math.round(perc2*1000)/1000 * 100;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\ndiv.container {\r\n  display: flex;\r\n}\r\ntextarea.slope-data {\r\n  width: 20em;\r\n  height: 30em;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SlopeCalc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SlopeCalc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SlopeCalc.vue?vue&type=template&id=5b36f4a8&scoped=true&\"\nimport script from \"./SlopeCalc.vue?vue&type=script&lang=js&\"\nexport * from \"./SlopeCalc.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SlopeCalc.vue?vue&type=style&index=0&id=5b36f4a8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b36f4a8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}